<link rel="stylesheet" href="css/style.css">

<div class="verify-container text-center">
    <h4 class="mb-4">Verify Your Email</h4>
    <p class="text-muted">Enter the 6-digit OTP sent to your email</p>
    <form id="otpForm" action="/otp-varify" method="POST" >
      <div class="mb-3">
        <input type="text" id="otp" name="otp" class="form-control text-center" maxlength="6" placeholder="Enter OTP" required />
      </div>
      <button type="submit" class="btn btn-primary w-100" >Verify OTP</button>
    </form>

    <div class="mt-3">
      <span class="text-muted">Resend OTP in </span>
      <span class="timer" id="timer">01:00</span>
    </div>

    <button id="resendBtn" class="btn btn-link mt-2" disabled>Resend OTP</button>
  </div>

  <script>
    let timerElement = document.getElementById("timer");
    let resendBtn = document.getElementById("resendBtn");
    let timeLeft = 60; // 60 seconds

    const updateTimer = () => {
      let minutes = Math.floor(timeLeft / 60);
      let seconds = timeLeft % 60;
      timerElement.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
    };

    const countdown = setInterval(() => {
      timeLeft--;
      updateTimer();
      if (timeLeft <= 0) {
        clearInterval(countdown);
        resendBtn.disabled = false;
        timerElement.textContent = "00:00";
      }
    }, 1000);

    resendBtn.addEventListener("click", () => {
      resendBtn.disabled = true;
      timeLeft = 60;
      updateTimer();
      // You can replace this with an actual API call to resend OTP
      //alert("OTP resent!");
      $.ajax({
        type:"POST",
        url:"/resend-otp",
        success:function(response){
          if(response.succcess)
          {
            Swal.fire({
              icon:"success",
              title:"OTP resend successfully",
              showConfirmButton:false,
              timer:1500,
            })
          }else{
            Swal.fire({
              icon:"error",
              title:"Error",
              text:"Failed to resend OTP. please try again"
            })
          }

        }
      })
     
      setTimeout(() => {
        const newCountdown = setInterval(() => {
          timeLeft--;
          updateTimer();
          if (timeLeft <= 0) {
            clearInterval(newCountdown);
            resendBtn.disabled = false;
          }
        }, 1000);
      }, 1000);
    });



const otpForm = document.getElementById("otpForm");
otpForm.addEventListener("submit", function (e) {
  e.preventDefault();  // Prevent the default form submission
  validateOtpForm();   // Call your custom AJAX function
});


updateTimer();
function validateOtpForm()
{
  const otpInput=document.getElementById('otp').value;
  console.log(otpInput)
  $.ajax({
    type:"POST",
    url:"/otp-varify",
    data:{otp:otpInput},
    success:(response)=>{
      if(response.success){
        Swal.fire({ icon:"success",
          title:"OTP verification successful",
          showConfirmButton:false,
          timer:1500,
         

        }).then(()=>{
          window.location.href=response.redirectUrl
        })
        }else{
          Swal.fire({
            icon:"error",
            title:"Error",
            text:response.message
          })
        }            
    },
    error:function(){
      Swal.fire({
        icon:"error",
        title:"Invalid OTP",
        text:"Please try again"
      })
    }
  })
return false;
}


  </script>