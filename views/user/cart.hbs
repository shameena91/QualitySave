{{> headr}}
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f1f3f6;
  }

  .cart-container {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
  }

  .cart-item {
    display: flex;
    gap: 20px;
    border-bottom: 1px solid #e0e0e0;
    padding: 20px 0;
  }

  .cart-item img {
    width: 140px;
    height: 140px;
    object-fit: contain;
  }

  .product-section {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .product-details {
    margin-bottom: 10px;
  }

  .product-price {
    font-weight: 600;
    color: #212121;
  }

  .quantity-control {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 10px;
  }

  .qty-btn {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    font-size: 18px;
    background-color: white;
    border: 1px solid #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }

  .quantity-circle {
    width: 32px;
    height: 32px;
    border: 1px solid #ccc;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white;
    font-weight: 500;
  }

  .action-links {
    margin-top: 10px;
  }

  .action-links a {
    font-size: 14px;
    margin-right: 15px;
    color: #2874f0;
    cursor: pointer;
  }

  .cart-summary {
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    height: fit-content;
    box-shadow: 0 0 5px rgba(0,0,0,0.1);
  }
</style>

<div class="container mt-5">
  <div class="row">
    <div class="col-md-8 cart-container">

      <h4>My Cart ({{cartProducts.length}})</h4>
      
      {{#if cartProducts.length}}
      {{#each cartProducts}}
      {{#if this.productId.quantity}}
<div class="cart-item">
    <div>
        <a href="/productDetails/{{this.productId._id}}">
            <img src="/uploads/re-image/{{this.productId.productImage.[0]}}" 
                 style="height:120px;width:120px;padding:15px" 
                 alt="{{this.productId.productName}}" />
        </a>
        <div class="quantity-control justify-content-center mt-2">
            <div class="qty-btn" onclick="decreaseQty('{{this.productId._id}}')">-</div>
            <div class="quantity-circle" id="qtyDisplay-{{this.productId._id}}">{{this.quantity}}</div>
            <div class="qty-btn" onclick="increaseQty('{{this.productId._id}}')">+</div>
        </div>
    </div>

    <div class="product-section">
        <div class="product-details" >
            <a href="/productDetails/{{this.productId._id}}" class= "text-decoration-none" style="color:black"><h5>{{this.productId.productName}}</h5></a>
            
            {{#if this.productId.productOffer}}
                <span class="text-muted text-decoration-line-through ms-1"  style="display:none;" id="salePrice-{{this.productId._id}}">₹{{this.salePrice}}</span>
                  <span class="text-muted text-decoration-line-through ms-1" id="totalSalePrice-{{this.productId._id}}">₹{{this.totalSalePrice}}</span>
                <span class="fs-4 text-primary fw-bold" id="totalPrice-{{this.productId._id}}">₹{{this.totalPrice}}</span>
                <span class="text-muted" id="price-{{this.productId._id}}" style="display:none;">{{this.price}}</span>

                <span class="offer ms-2" style="color:green;font-size:20px;font-weight:600">&nbsp;{{this.productId.productOffer}}% off</span>
            {{else}}
            <span class="text-muted text-decoration-line-through ms-1"  style="display:none;" id="salePrice-{{this.productId._id}}">₹{{this.salePrice}}</span>
                <span class="fs-4 text-primary fw-bold" id="totalPrice-{{this.productId._id}}">₹{{this.totalPrice}}</span>
                  <span class="text-muted" id="price-{{this.productId._id}}" style="display:none;">{{this.price}}</span>

            {{/if}}          
        </div>
        <div class="action-links">
            <a class="text-danger text-decoration-none fw-bold" onclick="removeItem('{{this.productId._id}}')">REMOVE</a>
        </div>
    </div>
</div>
{{else}}
<div class="cart-item">
  <div>
        <a href="/productDetails/{{this.productId._id}}">
            <img src="/uploads/re-image/{{this.productId.productImage.[0]}}" 
                 style="height:120px;width:120px;padding:15px" 
                 alt="{{this.productId.productName}}" />
        </a>
        </div>
            <div class="product-section">
        <div class="product-details" >
        <a href="/productDetails/{{this.productId._id}}"  class= "text-decoration-none" style="color:black"><h5>{{this.productId.productName}}</h5></a>
            <h5 style="color:red">Currently Out of Stock</h5>
        </div>
        <div class="action-links">
            <a class="text-danger text-decoration-none fw-bold" onclick="removeItem('{{this.productId._id}}')">REMOVE</a>
        </div>
        </div>
        </div>
        
           {{!-- <div class="product-section">
        <div class="product-details" >
            
            </div>
            </div> --}}
{{/if}}
{{/each}}
{{else}}
 <div class="text-center py-5">
    <h5>Your cart is empty.</h5>
    <a href="/shop" class="btn btn-primary mt-3">Continue Shopping</a>
  </div>
{{/if}}
    </div>

    <div class="col-md-4">
      <div class="cart-summary">
        <h5>PRICE DETAILS</h5>
        <hr>
        <div class="d-flex justify-content-between">
          <span >Price ( {{cartProducts.length}} Items)</span>
          <span id="sumSalePrice">₹ {{sumSalePrice}}</span>
        </div>
         <div class="d-flex justify-content-between pt-2">
          <span>Discount</span>
          <span class="text-success" id="discoutPrice">- ₹{{discount}}</span>
        </div>
        <div class="d-flex justify-content-between pt-2">
          <span>Shipping Charges</span>
          
          <span class="text-success">{{#if (lt sumTotalPrice 850 )}}+ ₹{{shippingCharge}} {{else}}FREE{{/if}}</span>
        </div>
        <hr>
        <div class="d-flex justify-content-between fw-bold">
          <span>Total Amount</span>
          <span id="sumTotalPrice">{{#if (lt sumTotalPrice 850 )}}₹{{add sumTotalPrice shippingCharge}} {{else}}₹{{sumTotalPrice}}{{/if}}</span>
        </div>
       
        {{#if (and cartProducts.length (gt hasStock 0))}}
        <a href="/checkout">
        <button class="btn btn-warning w-100 mt-4">Place Order</button></a>
        
        
        {{else }}
        
        <button class="btn btn-warning w-100 mt-4 disabled">Place Order</button>
        {{/if}}
      </div>
    </div>
  </div>
</div>


  
 <script>
  function increaseQty(productId) {
  const qtyDisplay = document.getElementById(`qtyDisplay-${productId}`);
  let quantity = parseInt(qtyDisplay.textContent);
  const maxQuantity = 5;

  if (quantity < maxQuantity) {
    quantity++;
    qtyDisplay.textContent = quantity;

     const price = parseFloat(document.getElementById(`price-${productId}`).textContent);

    const salePriceElement = document.getElementById(`salePrice-${productId}`);
    const salePrice = salePriceElement ? parseFloat(salePriceElement.textContent.replace('₹', '').trim()) : 0;

    const totalPriceElement = document.getElementById(`totalPrice-${productId}`);
    const totalSalePriceElement = document.getElementById(`totalSalePrice-${productId}`);
    const sumTotalPriceElement = document.getElementById('sumTotalPrice');

    let sumTotalPrice = parseFloat(sumTotalPriceElement.textContent.replace('₹', '').trim());

    const totalPrice = price * quantity;
    const totalSalePrice = salePrice * quantity;
    const sumTotalPriceNew = sumTotalPrice + price;

    if (totalPriceElement) totalPriceElement.textContent = `₹${totalPrice}`;
    if (totalSalePriceElement) totalSalePriceElement.textContent = `₹${totalSalePrice}`;
    if (sumTotalPriceElement) sumTotalPriceElement.textContent = `₹${sumTotalPriceNew}`;
    
    updateCart(productId, quantity, totalPrice, totalSalePrice);
  } else {
    Swal.fire({
      title: "Limit Reached",
      text: `You can only add up to ${maxQuantity} units of this product.`,
      icon: 'warning',
      timer: 2000
    });
  }
}
function decreaseQty(productId) {
  // Get the quantity element and parse the current quantity
  const qtyDisplay = document.getElementById(`qtyDisplay-${productId}`);
  let quantity = parseInt(qtyDisplay.textContent);
  
  if (quantity > 1 ) { // Prevent quantity from going below 1
    quantity--; // Decrease the quantity

    // Update the quantity on the frontend
    qtyDisplay.textContent = quantity;

    // Get the price per item
      const price = parseFloat(document.getElementById(`price-${productId}`).textContent);

    const salePriceElement = document.getElementById(`salePrice-${productId}`);
    const salePrice = salePriceElement ? parseFloat(salePriceElement.textContent.replace('₹', '').trim()) : 0;

    const totalPriceElement = document.getElementById(`totalPrice-${productId}`);
    const totalSalePriceElement = document.getElementById(`totalSalePrice-${productId}`);
    const sumTotalPriceElement = document.getElementById('sumTotalPrice');

    let sumTotalPrice = parseFloat(sumTotalPriceElement.textContent.replace('₹', '').trim());

    const totalPrice = price * quantity;
    const totalSalePrice = salePrice * quantity;
    const sumTotalPriceNew = Math.max(0, sumTotalPrice - price);

    if (totalPriceElement) totalPriceElement.textContent = `₹${totalPrice}`;
    if (totalSalePriceElement) totalSalePriceElement.textContent = `₹${totalSalePrice}`;
    if (sumTotalPriceElement) sumTotalPriceElement.textContent = `₹${sumTotalPriceNew}`;
    // Call the backend to update the cart with the new quantity and total price
    updateCart(productId, quantity, totalPrice,totalSalePrice);
  }
}

function updateCart(productId, quantity,totalPrice ,totalSalePrice) {
  $.ajax({
    url: '/updateCart',  // Backend route to update the cart
    method: 'POST',
    data: { productId, quantity, totalPrice ,totalSalePrice},
    success: (response) => {
      if (response.status) {
        Swal.fire({
          title: 'Cart Updated',
          text: `The quantity and total price have been updated successfully.`,
          icon: 'success',
          timer: 2000
        });
      }
    },
    error: (error) => {
      Swal.fire({
        title: 'Error',
        text: "There was an error updating the cart.",
        icon: 'error',
        timer: 2000
      });
    }
  });
}
function removeItem(productId) {
  $.ajax({
    url: '/removeItem',
    method: 'POST',
    data: { productId },
    success: (response) => {
      if (response.status) {
        Swal.fire({
          title: 'Item Removed',
          text: `The item has been removed from your cart.`,
          icon: 'success',
          timer: 1500,
          showConfirmButton: false
        }).then(() => {
          location.reload(); // ✅ reload the cart after removing item
        });
      }
    },
    error: (error) => {
      Swal.fire({
        title: 'Error',
        text: "There was an error removing the item.",
        icon: 'error',
        timer: 2000
      });
    }
  });
}

</script>

{{> foote}}
