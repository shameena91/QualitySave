{{> headr }}

<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #fafbfc;
    color: #333;
  }

 


  

  .product-grid {
    flex: 1;
    padding: 20px;
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
  }

  
  .user-info img {
    width: 150px;
    height: 150px;
    object-fit: cover;
    border-radius: 50%;
    margin-bottom: 15px;
  }

  .user-info h2 {
    margin-bottom: 10px;
  }

  .user-info p {
    font-size: 16px;
    color: #666;
  }
  .image-circle {
  position: relative;
  width: 120px;  /* Size of the circle */
  height: 120px; /* Size of the circle */
  border-radius: 50%;
  background-color: #f0f0f0;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 2px solid #ddd;
  transition: all 0.3s ease;
}

/* Ensuring the image fully covers the container and maintains the aspect ratio */
.image-circle img {
  margin-top: 15px;
 width: 120px;  /* Size of the circle */
  height: 120px; 
  object-fit: cover;  /* Ensures the image will cover the circle while maintaining aspect ratio */
  transition: opacity 0.3s ease;
}

/* Upload Icon settings */
.upload-icon {
  position: absolute;
  font-size: 50px;
  color: white;
  transition: opacity 0.3s ease;
}

/* Hover effect on image circle */
.profile-upload:hover .image-circle {
  border-color: #4CAF50;
}

.profile-upload:hover .upload-icon {
  opacity: 0.7;
}

/* Hide file input */
.profile-upload input[type="file"] {
  display: none;
}

</style>

<div class="main-container">
  <!-- Sidebar Group -->
 {{> profilesidebar}}
  <!-- Main Content -->
 <main class="product-grid">
  <div class="user-info ms-4">
    <div class="user-title">
    <h4 class="mb-4">Personal Information &nbsp;&nbsp;<span style="font-size:17px;color:rgb(16, 85, 233)">
      <a href="#" data-bs-toggle="modal" data-bs-target="#editModal">edit</a>
      </span>
      </h4>
    
</div>
    <label for="profileImage " class="profile-upload mt-3 mb-4">
     
        {{#if user.profileImage}}
         <div class="image-circle">
             <img id="profilePreview" src="/uploads/re-image/{{user.profileImage}}" alt="Profile Avatar"/>
             </div>
                <a href="javascript:void(0);" id="removeImage"  onclick="removeProImage('{{user._id}}')" class="mt-2" style="color:red">Remove Image</a>
             {{else}}
        <div class="image-circle">
        <img id="profilePreview" src="/images/avatar.png" alt="Profile Avatar"></div>
        {{/if}}
      </div>
    </label>

    <input type="file" id="profileImage" accept="image/*" style="display: none;">

    <h5 style="text-transform:capitalize">{{user.name}}</h5>
    
    <p>Gender:{{#if user.gender}} {{user.gender}} {{/if}}</p>
   
    {{#if user.phone}}
    <p> Mobile No:&nbsp;{{user.phone}}</p>
    {{/if}}

   
    <p>Email:&nbsp;{{user.email}}</p>

    <div class="action-buttons mt-3">
      <a href="/change-email">
      <button class="btn btn-primary" >Change Email</button></a>
      <a href="/change-password">
      <button class="btn btn-secondary">Change Password</button></a>
    </div>
    
  </div>
</main>
</div>



<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content p-3">
      <div class="modal-header">
        <h5 class="modal-title" id="editModalLabel">Edit Personal Information</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="profileEditForm" enctype="multipart/form-data">
           <div class=" mb-3">
      <label for="editProfileImage" class="d-block mb-2">Profile Image</label>
      {{!-- <div class="image-circle mx-auto mb-2">
        <img id="editProfilePreview" src="{{user.profileImageUrl}}" alt="Profile Image">
      </div> --}}
      <input type="file" class="form-control" id="editProfileImage" accept="image/*">
    </div>

          <div class="mb-3">
            <label for="editName" class="form-label">Name</label>
            <input type="text" class="form-control" id="editName" value="{{user.name}}">
          </div>
          <div class="mb-3">
            <label for="editGender" class="form-label">Gender</label>
            <select class="form-select" id="editGender">
              <option value="">Select</option>
             <option value="Male" {{#if (eq user.gender "Male")}}selected{{/if}}>Male</option>
              <option value="Female" {{#if (eq gender "Female")}}selected{{/if}} >Female</option>
              <option value="Other" {{#if (eq gender "Other")}}selected{{/if}} >Other</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="editPhone" class="form-label">Mobile No</label>
            <input type="text" class="form-control" id="editPhone" value="{{user.phone}}">
          </div>
        
          <button type="submit" class="btn btn-success">Save Changes</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>

function removeProImage(id) {
  $.ajax({
    url: `/user-profile/${id}`,  // Update the URL to match the route
    method: "DELETE",
    contentType: "application/json", // Ensure content type is correct
    success: function (data) {
      Swal.fire({
        title: "Image Removed",
        text: data.message || "Profile image removed successfully.",
        icon: "success",
        confirmButtonText: "OK"
      }).then(() => {
        // Update UI or reload page if necessary
        window.location.reload(); // Or change to appropriate redirection
      });
    },
    error: function (err) {
      Swal.fire({
        title: "Error!",
        text: err.responseJSON?.error || "Something went wrong.",
        icon: "error",
        confirmButtonText: "OK"
      });
    }
  });
}

  document.getElementById('profileEditForm').addEventListener("submit", async function (e) {
    e.preventDefault();

    const formData = new FormData();

    formData.append("name", document.getElementById("editName").value);
    formData.append("gender", document.getElementById("editGender").value);
    formData.append("phone", document.getElementById("editPhone").value);
  

    const imageInput = document.getElementById("editProfileImage");
    if (imageInput.files.length > 0) {
      formData.append("image", imageInput.files[0]);
    }

    try {
      const response = await fetch("/user-profile", {
        method: "PATCH",
        body: formData
      });

      const result = await response.json();

      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Profile Updated',
          text: result.message || 'Your changes have been saved.',
          timer: 2000,
          showConfirmButton: false
        }).then(() => location.reload());
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Update Failed',
          text: result.message || 'Something went wrong!'
        });
      }

    } catch (err) {
      console.error('Error:', err);
      Swal.fire({
        icon: 'error',
        title: 'Network Error',
        text: 'Unable to update profile at the moment.'
      });
    }
  });
</script>

{{> foote }}
